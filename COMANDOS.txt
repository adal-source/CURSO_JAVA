git branch= mostrar rama(s)/agregar rama
git checkout (branch)= cambio de rama
git merge (name branch)= traer todos los cambios de una rama a la que se esta actualmenteg
**(SALIR DE COMMIT CON esc+shif+z+z)
**(ESCRIBIR EN VIM esc+i)
staging= memoria ram
ls -al= ver archivos ocultos
git init= para inicializar un repositorio
pwd= ruta actual
nano <file>= crear archivo con nombre
git status= mostrar el estatus actual del repositorio
git add <file>= agregar el archivo al staging
git add .= agregar todos los archivos monificados
git config= ver toda la congiguracion
git config --global user.name/email " "= agregar el nombre al usuario principal
git config -l= mostrar en lista
git commit -m ""= agregar el archivo al repositorio con un mensaje
git commit= abre el editor de texto vim
git show= mostrar cambios
git log <file>= muestra todo el historial de cambios
git rm --cached <file>= sacar del repositorio y regresarlo al staging
git restore= descartar cambios del archivo
git diff (identificador inicial/final) (identificador inicial/final)
git checkout id (del commit) <file>= regresar a la version anterior
git reset id del commit --hard/soft= elimina de manera permanente hasta el commit puesto/ lo elimina pero el staging lo sigue guardande
git clone = clonar repositorio en la red
